# CONFIGURE THESE:
$SQLServer = "localhost"               # or "YourServer\InstanceName"
$LoginName = "splunk_monitor"
$Password = "StrongPassword123!"       # Use a strong password

# Load SQL Server Management Objects
Import-Module SqlServer -ErrorAction Stop

# Connect to server
$server = New-Object Microsoft.SqlServer.Management.Smo.Server $SQLServer

# Create login if it doesn't exist
if (-not $server.Logins[$LoginName]) {
    $login = New-Object Microsoft.SqlServer.Management.Smo.Login($server, $LoginName)
    $login.LoginType = [Microsoft.SqlServer.Management.Smo.LoginType]::SqlLogin
    $login.Create($Password)
    Write-Host "‚úÖ Login '$LoginName' created."
} else {
    Write-Host "‚ÑπÔ∏è Login '$LoginName' already exists."
}

# Loop through all user databases (excluding system DBs)
foreach ($db in $server.Databases) {
    if ($db.IsSystemObject -eq $false) {
        try {
            # Add user to database if not already mapped
            if (-not $db.Users[$LoginName]) {
                $user = New-Object Microsoft.SqlServer.Management.Smo.User($db, $LoginName)
                $user.Login = $LoginName
                $user.Create()
                Write-Host "‚ûï User added to DB: $($db.Name)"
            }

            # Add to db_owner role
            $db.Roles["db_owner"].AddMember($LoginName)
            Write-Host "üîê Granted db_owner in: $($db.Name)"
        } catch {
            Write-Host "‚ö†Ô∏è Failed on DB $($db.Name): $_"
        }
    }
}

Write-Host "‚úÖ '$LoginName' now has db_owner on all user databases."
